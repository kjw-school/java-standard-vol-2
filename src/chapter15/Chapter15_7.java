package chapter15;

/**
 * <h1>7. 직렬화(Serialization)</h1>
 */
public class Chapter15_7 {

	/**
	 * <h5>7.1 직렬화란?</h5><br>
	 * 직렬화(serialization)란 객체를 데이터 스트림으로 만드는 것을 뜻한다.<br>
	 * 다시 얘기하면 객체에 저장된 데이터를 스트림에 쓰기(write)위해 연속적인(serial) 데이터로 변환하는 것을 말한다.<br>
	 * 반대로 스트림으로부터 데이터를 읽어서 객체를 만드는 것을 역직렬화(deserialization)라고 한다.<br>
	 * 객체는 클래스에 정의된 인스턴스변수와 집합이다. 객체에는 클래스변수나 메서드가 포함되지 않는다.<br>
	 * 객체는 오직 인스턴스변수들로만 구성되어 있다.<br>
	 * 객체를 생성하면 인스턴스변수와 메서드를 함께 그리곤 했지만 사실 객체에는 메서드가 포함되지 않는다.<br>
	 * 인스턴스변수는 인스턴스마다 다른 값을 가질 수 있어야하기 때문에 별도의 메모리공간이 필요하지만 메서드는 변하는 것이 아니라서 메모리를 낭비해 가면서 인스턴스마다 같은 내용의 코드(메서드)를 포함시킬 이유는 없다.<br>
	 * 객체를 저장한다는 것은 바로 객체의 모든 인스턴스변수의 값을 저장한다는 것과 같은 의미이다.<br>
	 * 어떤 객체를 저장하고자 한다면, 현재 객체의 모든 인스턴스변수의 값을 저장하기만 하면 된다.<br>
	 * 그리고 저장했던 객체를 다시 생성하려면, 객체를 생성한 후에 저장했던 값을 읽어서 생성한 객체의 인스턴스변수에 저장하면 되는 것이다.
	 */
	class Memo01 {

	}

	/**
	 * <h5>7.2 ObjectInputStream, ObjectOutputStream</h5><br>
	 */
	class Memo02 {

	}

}
